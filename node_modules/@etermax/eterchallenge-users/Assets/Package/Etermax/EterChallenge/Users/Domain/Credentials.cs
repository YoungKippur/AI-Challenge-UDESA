using Package.Etermax.EterChallenge.Users.Domain.Errors;

namespace Package.Etermax.EterChallenge.Users.Domain
{
    /// <summary>Class <c>Credentials</c> holds the credentials that allow the application to interact with the backend
    /// services in a secure way </summary>
    public class Credentials
    {
        ///  AccessToken is the authorization token sended in the Authorization header in each request
        public readonly string AccessToken;

        /// Because <c>AccessToken</c> expires in a short period of time, the refresh token is used to request a new
        /// <c>AccessToken</c>
        public readonly string RefreshToken;

        public Credentials(string accessToken, string refreshToken)
        {
            if (string.IsNullOrEmpty(accessToken) || string.IsNullOrEmpty(refreshToken))
            {
                throw new InvalidTokenException(accessToken, refreshToken);
            }

            AccessToken = accessToken;
            RefreshToken = refreshToken;
        }
    }
}