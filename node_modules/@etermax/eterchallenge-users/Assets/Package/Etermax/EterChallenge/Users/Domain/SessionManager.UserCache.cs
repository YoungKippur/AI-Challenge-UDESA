using System;
using Etermax.Json;
using UniRx;
using UnityEngine;

namespace Package.Etermax.EterChallenge.Users.Domain
{
    public partial class SessionManager
    {
        private class UserCache
        {
            private const string UserPlayerPrefsKey = "Etermax.Platform.User";
            private User _user;

            public User Get()
            {
                if (_user != null)
                {
                    return _user;
                }

                if (PlayerPrefs.HasKey(UserPlayerPrefsKey))
                {
                    var userAsJson = PlayerPrefs.GetString(UserPlayerPrefsKey);
                    _user = JsonObject.FromJson<User>(userAsJson);
                    return _user;
                }

                return null;
            }

            public void Put(User user)
            {
                _user = user;
                GetUserAsString(user)
                    .ObserveOnMainThread()
                    .Subscribe(userAsString =>
                    {
                        PlayerPrefs.SetString(UserPlayerPrefsKey, userAsString);
                        PlayerPrefs.Save();
                    });
            }

            private IObservable<string> GetUserAsString(User user)
            {
                return Observable.Start(() => JsonObject.Create(user).ToString());
            }
        }
    }
}